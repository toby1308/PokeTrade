
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <time.h>
#include <string.h>


int file_length(FILE * file){
	int count = 0;
	char str[50];
	while(fgets(str,50,file) != NULL){
		count = count + 1;
	}
	return count;
}

void initialize_array(int* array, FILE * file){
	printf("array has a size of %d",sizeof(array));
	int age;
	for(int i = 0; i < sizeof(array);i++){
		fgets(file,"%d",age);
		printf("Array vlaue: %d , Index: %d || ",age,i);
	}
}

int main() {
	printf("%d\n",CLOCKS_PER_SEC);
	FILE * sd_file = fopen("transfer_data_line1.txt","r");
	FILE * sc_file = fopen("transfer_data_line2.txt","r");
	FILE * so_file = fopen("transfer_data_line3.txt","r");
	FILE * si_file = fopen("transfer_data_line4.txt","r");

	if (NULL == sd_file || NULL == sc_file || NULL == so_file || NULL == si_file){
		printf("Error opening files");
		return 0;
	}

	int sd_array[file_length(sd_file)];
	int sc_array[file_length(sc_file)];
	int so_array[file_length(so_file)];
	int si_array[file_length(si_file)];

	initialize_array(sd_array,sd_file);

	for (int i = 0; i < 50; i++){
		switch(i){
			case 6:
				printf("  SD  ");
				break;
			case 12:
				printf("      |");
				for (int j = 0; j < 200; j++){
					printf("-");
				}
				break;
			case 18:
				printf("  SC  ");
				break;
			case 30:
				printf("  SO  ");
				break;
			case 42:
				printf("  SI  ");
				break;
			default:
				printf("      ");


		}
		printf("|");
		printf("\n");
	}
	for (int j = 0;j <200; j++){
		printf("-");
	}
}
